// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:1234@localhost:5432/db_anto-gunshop?schema=public"
}

model Role{
  id String @id@default(uuid())
  name String
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  deleteAt  DateTime?

  user User[]
}

model User{
  id        String    @id@default(uuid())
  username  String    @unique
  password  String?
  id_role   String
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  deleteAt  DateTime?

  role Role? @relation(fields: [id_role],references: [id])
  staff Staff[]
  customer Customer[]
}

model Staff{
  id        String    @id@default(uuid())
  name      String    
  email     String
  no_phone  String
  created_at    DateTime  @default(now())
  update_at     DateTime  @updatedAt
  deleted_at    DateTime?
  id_user      String?

  user User?  @relation(fields: [id_user],references: [id])


}

model Customer{
  id        String    @id@default(uuid())
  name      String    
  email     String    @db.VarChar(200)
  no_phone  String  
  birth     DateTime
  province  String?
  city      String?
  distric   String?
  village   String?
  created_at    DateTime  @default(now())
  update_at     DateTime  @updatedAt
  deleted_at    DateTime?
  id_user      String?

  user User?  @relation(fields: [id_user],references: [id])
  cart Cart[]
  bill_header Bill_Header[]
}

model Product{
  id          String    @id@default(uuid())
  name        String
  description   String
  price       Decimal
  image_link  String?
  type_ammo   String?
  type_gun    String?
  max_ammo    Int        @default(0)

  typeAmmo     Gco?      @relation("TypeAmmo", fields: [type_ammo], references: [id])
  typeGun      Gco?      @relation("TypeGun", fields: [type_gun], references: [id])
  cart Cart[]
  bill_detail Bill_Detail[]

}

model Cart{
  id      String      @id@default(uuid())
  quantity Int
  id_product  String?
  id_customer String?

  customer Customer? @relation(fields: [id_customer],references: [id])

  product Product? @relation(fields: [id_product],references: [id])
}

model Gco{
  id     String       @id@default(uuid())
  name   String
  type   String
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  deleteAt  DateTime?

  productAmmo Product[] @relation("TypeAmmo")
  productGun  Product[] @relation("TypeGun")
  
}

model Company{
  id    String      @id@default(uuid())
  company_name  String  
  description String  
  logo_link        String
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
}
model Bill_Header{
  id String     @id@default(uuid())
  id_customer   String
  status_payment  Status_Payment
  total         Decimal
  payment_link  String?
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  deleteAt  DateTime?

  customer Customer @relation(fields: [id_customer],references: [id])
  bill_detail Bill_Detail[]
}

model Bill_Detail{
  id    String    @id@default(uuid())
  id_bill_header   String
  id_product        String
  qty       Int
  price     Decimal
  sub_total   Decimal
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  deleteAt  DateTime?

  bill_header Bill_Header @relation(fields: [id_bill_header],references: [id])
  product Product @relation(fields: [id_product],references: [id])
}

model Audit_Bill_Header{
  id    String @id@default(uuid())
  id_bill_header String
  id_customer   String
  status_payment  Status_Payment
  total         Decimal
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  deleteAt  DateTime?

  audit_bill_detail Audit_Bill_Detail[]

}
model Audit_Bill_Detail{
  id    String    @id@default(uuid())
  id_audit_bill_header  String
  id_product        String
  qty       Int
  price     Decimal
  sub_total   Decimal
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  deleteAt  DateTime?

  audit_bill_header Audit_Bill_Header @relation(fields: [id_audit_bill_header],references: [id])

}
enum Status_Payment{
  PAID
  UNPAID
  PENDING
  CANCEL
}

